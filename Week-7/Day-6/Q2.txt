class Solution {
public:
    void sortedInsert(vector<int> &arr, int val){
    if(arr.size()==0){
        arr.push_back(val);
        return;
    }
    int index=-1;
    for(unsigned int i=0;i<arr.size();i++){
        if(val<=arr[i]){
            index=i;
            break;
        }

    }
    if(index==-1){
        arr.push_back(val);
        return;
    }

    arr.insert(arr.begin()+index, val);

}

    int lastStoneWeight(vector<int>& stones) {
        sort(stones.begin(), stones.end());
        cout<<stones.size();
        while(stones.size()>1){
            int f = stones[stones.size()-1];
            int s = stones[stones.size()-2];
            
            stones.pop_back();
            stones.pop_back();
            if(f!=s){sortedInsert(stones, f-s);}
        }
        if(stones.size()==0){return 0;}
        return stones[0];
    }
};