 vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> result;
        
        if (matrix.empty()){
            return result;
        }
        
        int col_start = 0, col_end = matrix[0].size(), row_start = 0, row_end = matrix.size();
        bool not_finished = true;
        
        if (matrix.size() == 1){
            return matrix[0];
        }
        else if (matrix[0].size() == 1){
            for (int i = 0; i < matrix.size(); ++i){
                result.push_back(matrix[i][0]);
            }
            return result;
        }
        
        while(not_finished){
            not_finished = false;
            
            //top row
            if (row_start < row_end){
                for (int i = col_start; i < col_end; ++i){
                    result.push_back(matrix[row_start][i]);
                    not_finished = true;
                }
            }
            
            //last col
            if (col_start < col_end){
                for (int i = row_start+1; i < row_end; ++i){
                    result.push_back(matrix[i][col_end-1]);
                    not_finished = true;
                }
            }
            
            
            //last row
            if (row_start + 1 < row_end){
                for (int i = col_end - 2; i >= col_start; --i){
                    result.push_back(matrix[row_end-1][i]);
                    not_finished = true;
                }
            }
            
            //first col
            if (col_start + 1 < col_end){
                for (int i = row_end - 2; i > row_start; --i){
                    result.push_back(matrix[i][col_start]);
                    not_finished = true;
                }
            }
            
            
            col_start++;
            col_end--;
            row_start++;
            row_end--;
        }
        
        return result;
    }